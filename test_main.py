from quickhull_python import quick_hull, get_result


def test_correct_lenght():
    P = [[81, 41], [163, 243], [34, 248], [79, 233], [233, 121], [62, 153], [80, 164], [64, 108], [37, 49], [175, 134],
         [235, 183], [246, 159], [160, 49], [229, 155], [98, 28], [216, 167], [231, 194], [230, 62], [178, 111],
         [210, 175], [221, 12], [131, 241], [117, 206], [178, 119], [191, 114]]
    assert len(quick_hull(P)) == 8

    P = []
    assert len(quick_hull(P)) == 0

    P = [[-2.156648374711978, 66.9359411978681], [-19.952243385348293, -39.37595491808714],
         [-33.63233741878674, 3.421122747268535], [16.865762458705667, 76.48950687610673],
         [-0.6744785472647844, 4.563526823491283], [-15.172164435397276, 77.61562582840028],
         [-29.481028829285577, 5.013558999729087], [48.11433506738531, -56.39716278567512],
         [-5.6815227669447825, 26.35073946408581], [-8.304269840871534, 12.245362360640243],
         [14.882385673523492, -0.8667097338369912], [-1.0268603163772745, 0.20814541789849372],
         [-32.091374745061366, -14.824280528307488], [1.0837722762134563, -40.72097014469925],
         [42.685571767897656, -33.74801325115064], [-13.179991208117595, 20.88295538351893],
         [-1.1536024818345092, -28.784949183751255], [38.65051729423537, 5.102351219670852],
         [-46.58471478302851, -39.40469765588034], [-17.286840303216092, 26.468247387032186],
         [23.269451051754274, -82.69364205502299], [22.499335728356105, 1.1068845306084354],
         [-16.721772749081623, 35.672249057181126], [-36.18234194192042, 17.118580966731336],
         [-15.900375182619262, 42.120471362925294]]
    assert len(quick_hull(P)) == 7

    P = [[0.061273779485605195, 0.372792615526936], [0.4620595574925357, 0.10758240199511426],
         [0.6948105554987626, 0.8836806476112841], [0.8529251923273483, 0.0579465001596815],
         [0.8885068591036102, 0.44921626574164797], [0.6118717002765929, 0.41065630926902685],
         [0.9186118914253422, 0.2834718177389346], [0.8123672416160882, 0.15532312034121143],
         [0.8532520785913791, 0.10951625108780338], [0.5704978526607816, 0.5620484429594576],
         [0.755807343686137, 0.5258770607196352], [0.17427970350252975, 0.5065677558396069],
         [0.9171391030865933, 0.34361690824056723], [0.17711520871738318, 0.6871651970610206],
         [0.889656367924576, 0.18735598085198968], [0.23735752436990498, 0.9728536842295028],
         [0.026812672507393942, 0.012795165457892277], [0.9816171255346109, 0.5133600969197368],
         [0.016285328446527525, 0.7728787537264388], [0.9707626827493334, 0.9637119893456455],
         [0.9270023886432179, 0.9157216905801253], [0.9430734019184547, 0.5710899521324596],
         [0.899093237594495, 0.17707366208177977], [0.27192979683154184, 0.8249784973682465],
         [0.8186998485432364, 0.8606762349524958], [0.6659993531872187, 0.16905678943179492],
         [0.8106510410600185, 0.5665280291576869], [0.3641164097251772, 0.39899397054486896],
         [0.7896884925738941, 0.9053184821324411], [0.3420190287133905, 0.4285674690852289],
         [0.5273791918730977, 0.3082439948476986], [0.028392833158483843, 0.48553650972548357],
         [0.10735194261764125, 0.2494790034253076], [0.4202123621626812, 0.8112660558461225],
         [0.9799770394313803, 0.04979868408950505], [0.8666724314129886, 0.007349540653604825],
         [0.34107102994162775, 0.7912077724179577], [0.5012295715551606, 0.2696645086876551],
         [0.13933154234510692, 0.8464358153363843], [0.04402058351446214, 0.9525605380421229],
         [0.1291850693011274, 0.003083460331608334], [0.10127604141175184, 0.5069103250857642],
         [0.6324472401067174, 0.9260288963884841], [0.5239802033001004, 0.03943909998517259],
         [0.555530019168885, 0.0898464343008758], [0.63393067804771, 0.5020924410256682],
         [0.09926547920967377, 0.8379006979192014], [0.777450247579952, 0.7145523087199667],
         [0.45171798932252905, 0.6126797884433289], [0.8630159794269284, 0.3006662608667652],
         [0.3166761534698108, 0.7086352671995665], [0.6341919280987821, 0.03214697848567771],
         [0.9220686304873359, 0.5677403550633073], [0.7174641756448984, 0.14430365739856943],
         [0.5033725258322136, 0.6994794913645659], [0.31534618508222556, 0.647983990175303],
         [0.49798831348116424, 0.8285137486768618], [0.491976680587243, 0.24060889701215227],
         [0.3393357820172115, 0.9991391415003958], [0.8677092807027048, 0.9161134908193431],
         [0.3817510208688699, 0.44731540888545074], [0.42884678552118405, 0.7984023592617701],
         [0.697984936725942, 0.9497295436584051], [0.9344707230298915, 0.06460284950657846],
         [0.9583854701222492, 0.37626554712139226], [0.7942368920928837, 0.24277414509520412],
         [0.81622449740797, 0.24116595581564637], [0.4210453372197549, 0.245424284253272],
         [0.5205226738613976, 0.3224298551098984], [0.6911923744792761, 0.20515407225980653],
         [0.23077937757140654, 0.8659326526719218], [0.09400084225750827, 0.20177338856429072],
         [0.6525748559025479, 0.057349316526563165], [0.8685446654710961, 0.41051015435937177],
         [0.6555196859796197, 0.28740393114213814], [0.9941325129143291, 0.4662925576764707],
         [0.11929372963598173, 0.30779464602394135], [0.46474111040344135, 0.14810152618385608],
         [0.3719024602354002, 0.4474880817055725], [0.196986073609137, 0.4934351162520777],
         [0.528262219207653, 0.9447313176224403], [0.8769307746395848, 0.0321010691288538],
         [0.8402142880076191, 0.8703426569224655], [0.5955506907537298, 0.011174035029765439],
         [0.638058227088716, 0.11279892980226913], [0.06948704435283293, 0.613284672956671],
         [0.06797469995755179, 0.8257018956856708], [0.6966026700718856, 0.1641179005399065],
         [0.13651664340779457, 0.4526840766294228], [0.8113918371256968, 0.2507987261124507],
         [0.048507263413387625, 0.024511322796852864], [0.9877452522370616, 0.5940998221905116],
         [0.03317391450569074, 0.8968135465378674], [0.2989149256278152, 0.4445852367690516],
         [0.1479640213136525, 0.3991569864242416], [0.6187458270550575, 0.4528599059668251],
         [0.7585399625861375, 0.8778967524082884], [0.46001042783600965, 0.16426084346003222],
         [0.28876220028972766, 0.40791478660925173], [0.6378314544138768, 0.28723013290847177],
         [0.23967929864963267, 0.8136502641614329], [0.4886878540509769, 0.0898179057238212],
         [0.364521192795522, 0.031976042379489256], [0.3059100819790772, 0.5515561938848416],
         [0.8816013773183844, 0.14917673106253626], [0.7056527751594946, 0.7850353499657056],
         [0.6819759276799296, 0.2512838652038577], [0.4565443308855305, 0.8623646791675907],
         [0.43838009407584166, 0.7052622425192245], [0.8442400301235274, 0.9982687608868056],
         [0.48757762107663816, 0.5939070878285243], [0.1241452383505014, 0.4013958799328893],
         [0.9791209441511586, 0.19890223606734458], [0.7216476877807719, 0.5452873639835908],
         [0.6740708163655373, 0.885262984497378], [0.6481943868398878, 0.4123721253041557],
         [0.820914114407307, 0.42411129280414395], [0.47651905128181915, 0.7790195106508091],
         [0.33198711593092234, 0.9131568113327959], [0.49859043178659346, 0.5726911172158723],
         [0.20294544251770585, 0.8717780587388823], [0.8206049049624264, 0.3141544510203187],
         [0.6283750828255887, 0.32150188134421653], [0.008448986421065507, 0.9658519209568088],
         [0.8194669971038906, 0.7984524016021604], [0.8393951287529225, 0.4508798424317465],
         [0.5036275551817261, 0.12287690545926189], [0.2136815134578468, 0.18582351296606225],
         [0.48319412308926346, 0.2261002106672073], [0.1683989973308282, 0.2980018448191599],
         [0.988052023829082, 0.46936958476885526], [0.2724364805619518, 0.806092668578724],
         [0.3707166757531628, 0.6069467675742634], [0.22087287342969353, 0.5333591809410294],
         [0.745702155399057, 0.9962769664035724], [0.7259152933228956, 0.3181143656790346],
         [0.4902487382030849, 0.8501098585785735], [0.38874077458433975, 0.19682617161944493],
         [0.4548078832533947, 0.48925493327075775], [0.02549939305495863, 0.2764403192789556],
         [0.9448772686271119, 0.9563215282609154], [0.47842047694005463, 0.2583498074336228],
         [0.11834314558803694, 0.7066397052851652], [0.8415746813315748, 0.08694442768642774],
         [0.5645309620865048, 0.8955765481379058], [0.19028181288674628, 0.393864349199913],
         [0.5062927783569399, 0.1448859833977192], [0.33094853010466474, 0.40550261947664357],
         [0.4218699268538212, 0.2474692261412459], [0.07030043124206276, 0.6595155635212885]]
    assert len(quick_hull(P)) == 9


def test_correct_values():
    P_input = [[81, 41], [163, 243], [34, 248], [79, 233], [233, 121], [62, 153], [80, 164], [64, 108], [37, 49],
               [175, 134], [235, 183], [246, 159], [160, 49], [229, 155], [98, 28], [216, 167], [231, 194], [230, 62],
               [178, 111], [210, 175], [221, 12], [131, 241], [117, 206], [178, 119], [191, 114]]
    P_output = {(34.0, 248.0),
                 (37.0, 49.0),
                 (98.0, 28.0),
                 (163.0, 243.0),
                 (221.0, 12.0),
                 (230.0, 62.0),
                 (231.0, 194.0),
                 (246.0, 159.0)}

    assert get_result(quick_hull(P_input)) == P_output
